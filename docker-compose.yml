version: '3.8'

services:
  traefik:
    image: traefik:v2.9
    container_name: todo-traefik
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/config:/etc/traefik
      - ./traefik/certificates:/certificates
    networks:
      - todo-network
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your@email.com"
      - "--certificatesresolvers.myresolver.acme.storage=/certificates/acme.json"

  frontend:
    build: ./frontend
    container_name: todo-frontend
    depends_on:
      - auth-api
      - todos-api
      - users-api
    networks:
      - todo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`domain.com`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  auth-api:
    build: ./auth-api
    container_name: todo-auth-api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=auth_db
    depends_on:
      - postgres
    networks:
      - todo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.domain.com`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=myresolver"
      - "traefik.http.services.auth.loadbalancer.server.port=8000"

  todos-api:
    build: ./todos-api
    container_name: todo-todos-api
    environment:
      - MONGO_URI=mongodb://mongodb:27017/todos
      - AUTH_API_URL=http://auth-api:8000
    depends_on:
      - mongodb
      - auth-api
    networks:
      - todo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos.rule=Host(`todos.domain.com`)"
      - "traefik.http.routers.todos.entrypoints=websecure"
      - "traefik.http.routers.todos.tls.certresolver=myresolver"
      - "traefik.http.services.todos.loadbalancer.server.port=3000"

  users-api:
    build: ./users-api
    container_name: todo-users-api
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/users_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    depends_on:
      - mysql
    networks:
      - todo-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users.rule=Host(`users.domain.com`)"
      - "traefik.http.routers.users.entrypoints=websecure"
      - "traefik.http.routers.users.tls.certresolver=myresolver"
      - "traefik.http.services.users.loadbalancer.server.port=8080"

  log-message-processor:
    build: ./log-message-processor
    container_name: todo-log-processor
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - todo-network

  redis:
    image: redis:7-alpine
    container_name: todo-redis
    networks:
      - todo-network

  postgres:
    image: postgres:15-alpine
    container_name: todo-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - todo-network

  mongodb:
    image: mongo:6-jammy
    container_name: todo-mongodb
    volumes:
      - mongodb_data:/data/db
    networks:
      - todo-network

  mysql:
    image: mysql:8
    container_name: todo-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=users_db
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - todo-network

networks:
  todo-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data:
  mysql_data:
